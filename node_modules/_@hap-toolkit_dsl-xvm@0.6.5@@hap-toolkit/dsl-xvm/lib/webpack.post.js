"use strict";const path=require("path"),fs=require("fs"),{colorconsole:colorconsole}=require("@hap-toolkit/shared-utils");module.exports.postHook=function(e,{cwd:o},{loaderWrapper:s}){const r=path.resolve(o,"hap.config.js");let l;if(fs.existsSync(r))try{l=require(r)}catch(e){colorconsole.error(`加载webpack配置文件[${r}]出错：${e.message}`)}else l={module:{rules:[{test:/\.(png|jpe?g|gif|svg|bmp|webp|mp4|wmv|avi|mpg|rmvb|mov|flv|otf|ttf|ttc|woff|eot)$/i,use:{loader:require.resolve("url-loader")}}]}};(l&&l.module&&l.module.rules||[]).forEach(o=>{o.test.exec(".ts")&&s(o),e.module.rules.push(o)}),e.module.rules.push({test:/\.(ux|mix)$/,use:{loader:require.resolve("./loader/ux-loader")}}),e.plugins.push(...l&&l.plugins||[]),Object.keys(e.resolve).forEach(o=>{const s=e.resolve[o];s instanceof Array?s.push(...l.resolve&&l.resolve[o]||[]):"object"==typeof s&&null!==s&&Object.assign(s,l.resolve&&l.resolve[o]||{})}),Object.keys(l&&l.resolve||{}).forEach(o=>{o in e.resolve||(e.resolve[o]=l.resolve[o])})};
//# sourceMappingURL=webpack.post.js.map
